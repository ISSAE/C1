apply plugin: 'java'

version = '1.0'
ext {
  tp_number = '01'
}

repositories {
	mavenCentral()
}

dependencies {
    // testImplementation 'junit:junit:4.12' // https://docs.gradle.org/current/userguide/java_testing.html
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

task runApp(type: JavaExec, dependsOn: compileJava) {
  classpath sourceSets.main.runtimeClasspath
  main = "com.yaps.petstore.Menu"
  standardInput = System.in 
}

task zip_src {
  ant.zip(destfile: "TP${tp_number}src.zip") {
    fileset(dir: '.') {
      includesfile(name: 'missingFiles.txt')
    }
  }
}
zip_src.doLast {
  println "***INFO***  zip_src done! "
}

clean.doLast {
      // delete also files generated by mark task
      file("${rootDir}/TP${tp_number}.test").delete()
      file("${rootDir}/TP${tp_number}.html").delete()
      file("${rootDir}/TP${tp_number}src.zip").delete()
}

task mark(type: JavaExec){
  group = 'verification'
  description = 'Runs other unit tests and Generates TP result.'
  dependsOn 'compileJava'
  dependsOn 'zip_src'
  main = "Tests"
  systemProperty "fichierScenario", "TP${tp_number}.test"
  classpath configurations.testCompile // to find JUnit jar
  classpath files([ "${buildDir}/classes/java/main", "install/test${tp_number}.jar" ])
}
mark.doLast {
  println "***INFO*** in mark : buildDir=${buildDir}"
}

task myTest(type: JavaExec){
  dependsOn compileJava
  dependsOn compileTestJava
  group = 'verification'
  description = 'Runs the unit tests in text mode.'
  main = "AllTests"
  classpath configurations.testCompile // to find JUnit jar
  classpath files([ "${buildDir}/classes/java/test" ]) // yaps test classes 
  classpath sourceSets.main.runtimeClasspath
}

task myTest0(type: JavaExec){
  dependsOn compileJava
  dependsOn compileTestJava
  main = "AllTests"
  // classpath configurations.testRuntime // to find test
  classpath configurations.testCompile // to find JUnit jar
  classpath files([ "${buildDir}/classes/java/main", "${buildDir}/classes/java/test" ]) // yaps classes 
  // classpath sourceSets.main.runtimeClasspath
}
